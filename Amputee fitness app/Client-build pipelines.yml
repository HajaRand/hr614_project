trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'fc5cebb4-a460-4b42-95fa-0a7899d8137b'

  # Web app name
  webAppName: 'FITNESSPRO5'

  # Environment name
  environmentName: 'FITNESSPRO5'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Custom Environment Variables
  VITE_APP_API_SERVER_URL: 'https://FITNESSPRO20.azurewebsites.net'
  VITE_APP_AUTH0_AUDIENCE: 'https://FITNESSPRO20.azurewebsites.net'
  VITE_APP_AUTH0_CALLBACK_URL: 'https://FITNESSPRO5.azurewebsites.net/callback'
  VITE_APP_AUTH0_CLIENT_ID: 'ARSQFZMRPO6tcDnhPmxzU5HOuupibISL'
  VITE_APP_AUTH0_DOMAIN: 'dev-8anoa8ykr6n3zoa7.uk.auth0.com'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - checkout: self
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        cd client
        export VITE_APP_API_SERVER_URL=$(VITE_APP_API_SERVER_URL)
        export VITE_APP_AUTH0_AUDIENCE=$(VITE_APP_AUTH0_AUDIENCE)
        export VITE_APP_AUTH0_CALLBACK_URL=$(VITE_APP_AUTH0_CALLBACK_URL)
        export VITE_APP_AUTH0_CLIENT_ID=$(VITE_APP_AUTH0_CLIENT_ID)
        export VITE_APP_AUTH0_DOMAIN=$(VITE_APP_AUTH0_DOMAIN)
        npm install
        npm run build
        cd ..
      displayName: 'Build React App'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/client/dist'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/client$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/client$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: FITNESSPRO5'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/client$(Build.BuildId).zip'
              RuntimeStack: 'NODE|20.x'
              StartupCommand: 'pm2 serve /home/site/wwwroot --no-daemon --spa'
